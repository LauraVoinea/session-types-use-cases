package coherence;

typestate APr {
	ValidAValidB	=	{
							Choice receiveChoiceFromCoordinate() :
							<
								READA:	Read,
								READB:	ValidAValidB,
								WRITEA:	Write,
								WRITEB:	InvalidAValidB,
								END:	end
							>
						}


	Read			=	{
							Word receiveWordFromMa(): ValidAValidB
						}

	Write			=	{
							void sendWordToMa(Word): ValidAInvalidB
						}


	InvalidAValidB	=	{
							Choice receiveChoiceFromCoordinate() :
							<
								READA:	Read,
								READB:	InvalidAValidB,
								WRITEA:	Write,
								WRITEB:	InvalidAValidB,
								END:	end
							>
						}

	ValidAInvalidB	=	{
							Choice receiveChoiceFromCoordinate() :
							<
								READA:	ReadAInvalidB,
								READB:	ValidAValidB,
								WRITEA:	Write,
								WRITEB:	InvalidAValidB,
								END:	end
							>
						}

	ReadAInvalidB	=	{
							Word receiveWordFromMa(): ValidAInvalidB
						}
}
